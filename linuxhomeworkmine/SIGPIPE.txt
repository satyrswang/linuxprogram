#include <stdio.h>#include <setjmp.h>#include <signal.h>
static sigjmp_buf jmpbuf;
void sig_fpe( int );
int main(int ac, char *av[]){int a = 10,     b = 0;
signal(SIGFPE, sig_fpe);         
if (sigsetjmp(jmpbuf, 1) == 0)//  try{  int i = a / b; } else{ printf("catch exception\n"); }}
void sig_fpe(int signo){siglongjmp(jmpbuf, 1)}

表头文件：#include <setjmp.h> 
函数定义：int sigsetjmp(sigjmp_buf env, int savesigs) 
函数说明：sigsetjmp()会保存目前堆栈环境，然后将目前的地址作一个记号，而在程序其他地方调用siglongjmp()时便会直接跳到这个记号位置，然后还原堆栈，继续程序好执行。 
参数env为用来保存目前堆栈环境，一般声明为全局变量 
参数savesigs若为非0则代表搁置的信号集合也会一块保存 
当sigsetjmp()返回0时代表已经做好记号上，若返回非0则代表由siglongjmp（）跳转回来。 
返回值  ：返回0代表局促存好目前的堆栈环境，随时可供siglongjmp()调用， 若返回非0值则代表由siglongjmp()返回
